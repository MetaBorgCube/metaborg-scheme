module top-exp

imports
  expression


rules
  // In order to follow the Nabl2 specification for Scheme
  // we need to evaluate the expressions used in top-expressions
  // in a new scope.
  // This is not needed from execution point of view.
  
  eval-top(v@Define(name, exp)) =
    line-f <- get(cur(), resolve-scope("__NEXT__"@v, "Line"));
    set(line-f, [0], !NEXT);
    
    val <- eval-exp(exp);
    path = resolveVar(name);
    scope <- new(int(1));
    link(scope, [], &P);
    mkcur(scope);
    set(scope, path, val);
    
    jump(get(line-f, [0]));
   NEXT
    
  eval-top(v@Redefine(name, exp)) = 
    line-f <- get(cur(), resolve-scope("__NEXT__"@v, "Line"));
    set(line-f, [0], !NEXT);
       
    v1 <- eval-exp(exp);    
    path = resolveVar(name);
    set(cur(), path, v1);
    
    jump(get(line-f, [0]));
   NEXT
    
  eval-top(v@exp) =
    line-f <- get(cur(), resolve-scope("__NEXT__"@v, "Line"));
    set(line-f, [0], !NEXT);
    print(eval-exp(exp));
    
    jump(get(line-f, [0]));
   NEXT