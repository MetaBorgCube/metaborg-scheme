module top-exp

imports
  expression

rules
  eval-top:: ast -> instr
  eval-top(Define(name, exp)) = 
    // Evaluate exp in a fresh scope
    // We don't strictly need this, 
    // but we need to follow the Nabl2 spec
    newscope <- new(int(0));
    link(newscope, [], &P);
    mkcur(newscope);
    
    v1 <- eval-exp(exp);
    
    newscope <- get(cur(), [&P]);
    mkcur(newscope);
    
    path <- resolve(name);
    scope <- new(int(1));
    link(scope, [], &P);
    mkcur(scope);
    set(scope, path, v1)
    
  eval-top(Redefine(name, exp)) =
    // Evaluate exp in a fresh scope 
    newscope <- new(int(0));
    link(newscope, [], &P);
    mkcur(newscope);
    
    v1 <- eval-exp(exp);
    
    newscope <- get(cur(), [&P]);
    mkcur(newscope);
    
    path <- resolve(name);
    set(cur(), path, v1)
    
  eval-top(exp) = 
    // Evaluate exp in a fresh scope
    newscope <- new(int(0));
    link(newscope, [], &P);
    mkcur(newscope);
    
    print(eval-exp(exp));
    
    newscope <- get(cur(), [&P]);
    mkcur(newscope)